<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tour.user.repository.read.UserPageReadRepository">
    <select id="myImageLoad" resultType="map" parameterType="map">
        SELECT
            IFNULL(mp.my_idx, 0) AS my_idx,
            pt.mb_idx,
            IFNULL(pt.post_idx, 0) AS post_idx,
            CONCAT(DATE_FORMAT(pt.post_reg_date, '%Y-%m-%d '), DATE_FORMAT(pt.post_reg_time, '%H:%i:%s')) AS post_regdate,
            IFNULL((SELECT mark_use FROM ad_bookmark ad WHERE ad.mb_idx = #{mb_idx} AND ad.post_idx = pt.post_idx), 'N') AS mark_now,
            IFNULL(CONCAT(#{url}, mp.my_image_file), '') AS first_post_image,
            pt.post_title,
            pt.post_content,
            IF(NULL, '', GROUP_CONCAT(CONCAT(#{url}, IFNULL(mp.my_image_file, '')))) AS images
        FROM ad_posting pt
                 LEFT JOIN ad_mypage mp ON mp.post_idx = pt.post_idx
        WHERE (mp.cpl_use = 'Y' OR mp.my_idx IS NULL)
          AND pt.mb_idx = #{mb_idx}
        GROUP BY pt.post_idx
        ORDER BY mp.my_regdate
    </select>

    <select id="myPageCnt" resultType="map" parameterType="map">
        SELECT
            am.mb_nickname,
            IFNULL(am.mb_sns, 'E') AS mb_sns,
            COUNT(DISTINCT li.like_idx) AS like_cnt,
            COUNT(DISTINCT rv.rv_idx) AS review_cnt,
            COUNT(DISTINCT mp.post_idx) AS image_cnt
        FROM ad_member am
                 LEFT JOIN ad_like li ON am.mb_idx = li.mb_idx AND li.like_status = 'Y' AND li.like_type = 'S'
                 LEFT JOIN ad_review rv ON am.mb_idx = rv.mb_idx AND rv.rv_use = 'Y'
                 LEFT JOIN ad_mypage mp ON am.mb_idx = mp.mb_idx
        WHERE am.mb_idx = #{mb_idx}
    </select>

    <select id="myLike" resultType="map" parameterType="map">
        SET @user_lng = IFNULL((SELECT IF(user_lng != 0.0, user_lng, 128.729853) FROM fcm_info WHERE mb_idx = IFNULL(#{mb_idx}, '')),  128.729853);
        SET @user_lat = IFNULL((SELECT IF(user_lng != 0.0, user_lat, 36.568195) FROM fcm_info WHERE mb_idx = IFNULL(#{mb_idx}, '')),  36.568195);

        SELECT
            CASE
                WHEN (ac.ct_parent = 11 or st.str_category = 11) THEN 'food'
                WHEN (ac.ct_parent = 10 or st.str_category = 10) THEN 'tour'
                WHEN (ac.ct_parent = 7 or st.str_category = 7) THEN 'exp'
                WHEN ac.ct_parent = 3 or st.str_category = 3 THEN 'fest'
                WHEN ac.ct_parent = 5 or st.str_category = 5 THEN 'hotel'
            ELSE 'etc'
                END AS store_type,
            @user_lng AS user_lng,
            @user_lat AS user_lat,
            li.like_idx,
            li.mb_idx,
            li.str_idx,
            li.like_status,
            IFNULL(st.str_like_cnt, 0) AS str_like_cnt,
            st.str_lat,
            st.str_lng,
            st.str_category,
            TRUNCATE(IFNULL((SELECT AVG(review_avg) FROM ad_review WHERE str_idx = st.str_idx), 0.0), 1)AS review_ave,
            ac.ct_ko_nm,
            ac.ct_ja_nm,
            ac.ct_zh_nm,
            ac.ct_es_nm,
            ac.ct_eu_nm,
            asd.str_dt_type AS str_dt_type,
            asd.str_dt_name AS str_dt_name,
            IFNULL(CONCAT( st.str_image), st.str_image) AS str_image,
            IFNULL(REGEXP_REPLACE(asd.str_dt_desc, '&lt;[^>]+>', '')  , '') AS str_dt_desc,
            (SELECT COUNT(*) FROM ad_review WHERE str_idx = st.str_idx) AS str_review_cnt,
            0.0 AS str_review_ave,
            TRUNCATE(
                    (6371 * acos(
                                    cos(radians(@user_lat)) * cos(radians(st.str_lat)) * cos(radians(st.str_lng) - radians(@user_lng)) +
                                    sin(radians(@user_lat)) * sin(radians(st.str_lat)))),1) AS str_km
        FROM ad_like li
                 LEFT JOIN ad_store st ON st.str_idx = li.str_idx
                 LEFT JOIN ad_store_detail asd ON st.str_idx = asd.str_idx
                 LEFT JOIN ad_category ac ON st.str_category = ac.ct_idx
        WHERE  li.mb_idx = #{mb_idx}
          AND li.like_status = 'Y' AND like_type = 'S'
          AND asd.str_dt_type = #{lang}
        GROUP BY st.str_idx, li.like_idx
        ORDER BY IFNULL(#{sorting}, '')
    </select>
    <select id="myReview" resultType="map" parameterType="map">
        SET @user_lng = IFNULL((SELECT IFNULL(user_lng, 128.729853) FROM fcm_info WHERE mb_idx = IFNULL(#{mb_idx}, '')),  128.729853);
        SET @user_lat = IFNULL((SELECT IFNULL(user_lat, 36.568195) FROM fcm_info WHERE mb_idx = IFNULL(#{mb_idx}, '')),  36.568195);

        SELECT DISTINCT
            st.str_idx AS str_idx
                    ,am.mb_nickname
                    , CASE
                          WHEN (ac.ct_parent = 11 or st.str_category = 11) THEN 'food'
                          WHEN (ac.ct_parent = 10 or st.str_category = 10) THEN 'tour'
                          WHEN (ac.ct_parent = 7 or st.str_category = 7) THEN 'exp'
                          WHEN ac.ct_parent = 3 or st.str_category = 3 THEN 'fest'
                          WHEN ac.ct_parent = 5 or st.str_category = 5 THEN 'hotel'
                          ELSE 'etc'
                        END AS store_type
                      , st.str_category
                      , IFNULL(st.str_like_cnt, '') AS str_like_cnt
                      , ac.ct_ko_nm
                      , ac.ct_ja_nm
                      , ac.ct_zh_nm
                      , ac.ct_es_nm
                      , ac.ct_eu_nm
                      , asd.str_dt_name AS str_dt_name
                      , (SELECT COUNT(*) FROM ad_review WHERE str_idx = st.str_idx ) AS str_review_cnt
                      , TRUNCATE(
                            (6371 * acos(
                                cos(radians(@user_lat)) * cos(radians(st.str_lat)) * cos(radians(st.str_lng) - radians(@user_lng)) +
                                sin(radians(@user_lat)) * sin(radians(st.str_lat)))),1) AS str_km
                      , IFNULL((SELECT like_status FROM ad_like WHERE mb_idx = IFNULL(#{mb_idx}, '') and str_idx = st.str_idx), 'N') AS like_status
                      , rv.rv_contents
                      , rv.rv_idx
                       , rv.rv_type
                        , rv.rv_anonym
                        , rv.rv_blind
                      , DATE_FORMAT( rv.rv_reg_date, '%y-%m-%d') AS rv_reg_date
                        , COALESCE(rv.rv_reply, '') AS rv_reply
                        , TRUNCATE(rv.review_avg, 1) AS review_ave
                        , 'Y' AS my_review
        FROM ad_review rv
                 LEFT JOIN ad_store st ON rv.str_idx = st.str_idx
                 LEFT JOIN ad_store_detail asd ON rv.str_idx = asd.str_idx
                 LEFT JOIN ad_category ac ON st.str_category = ac.ct_idx
                 LEFT JOIN ad_member am ON rv.mb_idx = am.mb_idx
        WHERE  rv.mb_idx  = #{mb_idx}
          AND rv.rv_use = 'Y'
          AND asd.str_dt_type = #{lang}
        GROUP BY st.str_idx, asd.str_dt_type, rv_idx, asd.str_dt_name
        ORDER BY IFNULL(#{sorting},'')
    </select>

    <select id="reviewImageList" parameterType="map" resultType="map">
        SELECT
            avi.rv_img_idx
             , CONCAT(#{url},avi.rv_img_file) as rv_img_file
        FROM ad_review_image avi
        WHERE avi.rv_idx = #{rv_idx} AND avi.rv_img_use = 'Y'
    </select>

    <select id="bannerList" resultType="map" parameterType="map">
        SELECT * FROM (
                          SELECT
                              st.str_idx AS str_idx
                               , IFNULL(st.str_image, '')  AS str_image
                               , asd.str_dt_name AS str_dt_name
                               , '' AS banner_url
                               , 'FASTIVAL' AS banner_type
                          FROM ad_store st
                                   LEFT JOIN ad_store_detail asd ON st.str_idx = asd.str_idx
                                   LEFT JOIN ad_category ac ON st.str_category = ac.ct_idx
                          WHERE asd.str_dt_type = #{lang}
                            AND (st.str_category = 3 OR st.str_category = 3)
                          GROUP BY st.str_idx, asd.str_dt_type
                          UNION ALL
                          SELECT
                              ab.bn_idx AS str_idx
                               , ab.bn_img AS str_image
                               , ab.bn_title AS str_dt_name
                               , ab.bn_url AS banner_url
                               , 'BANNER' AS banner_type
                          FROM ad_banner ab
                          WHERE ab.bn_use = 'Y'
                          AND (DATE_FORMAT(ab.bn_reg_dt, '%Y-%m-%d')) = (SELECT MAX(DATE_FORMAT(bn2.bn_reg_dt, '%Y-%m-%d')) FROM ad_banner bn2)
                          GROUP BY ab.bn_reg_dt
                      ) AS banner_list
        ORDER BY RAND()
    </select>

    <select id="storyList" parameterType="map" resultType="map">
        SELECT
            tr.tour_idx,
            tr.tour_title,
            IFNULL(tr.tour_subtitle, '') AS tour_subtitle,
            DATE_FORMAT(tr.tour_reg_dt, '%Y-%m-%d') AS tour_reg_dt,
            CONCAT(#{url},IFNULL(tr.tour_image,'')) AS tour_image,
            IFNULL(tr.tour_category ,'') AS tour_category,
            IFNULL(tr.tour_view_cnt, 0) AS tour_view_cnt
        FROM ad_tour tr
        WHERE tr.tour_use = 'Y'
        GROUP BY tr.tour_idx
        <if test="type = R">
            ORDER BY RAND() LIMIT 7
        </if>
    </select>

    <select id="storyRandom" parameterType="map" resultType="map">
        SELECT
        tr.tour_idx,
        tr.tour_title,
        IFNULL(tr.tour_subtitle, '') AS tour_subtitle,
        DATE_FORMAT(tr.tour_reg_dt, '%Y-%m-%d') AS tour_reg_dt,
        CONCAT(#{url},IFNULL(tr.tour_image,'')) AS tour_image,
        IFNULL(tr.tour_category ,'') AS tour_category,
        IFNULL(tr.tour_view_cnt, 0) AS tour_view_cnt
        FROM ad_tour tr
        WHERE tr.tour_use = 'Y'
        GROUP BY tr.tour_idx
        ORDER BY RAND() LIMIT 7
    </select>

    <select id="storyView" parameterType="map" resultType="map">
        SELECT
            tr.tour_idx,
            tr.tour_title,
            IFNULL(tr.tour_subtitle, '') AS tour_subtitle,
            DATE_FORMAT(tr.tour_reg_dt, '%Y-%m-%d') AS tour_reg_dt,
            CONCAT(#{url}, IFNULL(tr.tour_image, '')) AS tour_image,
            IFNULL(tr.tour_category, '') AS tour_category,
            IFNULL(tr.tour_view_cnt, 0) AS tour_view_cnt,
            IFNULL(TO_BASE64(CONVERT(tour_contents USING utf8)), '') AS tour_contents
        FROM ad_tour tr
        WHERE tr.tour_idx = #{tour_idx}
        GROUP BY tr.tour_idx
    </select>

    <select id="passList" parameterType="map" resultType="map">
        SELECT
            aps.ps_title
             , aps.ps_idx as ps_idx
             ,  CASE
                    WHEN  (0 = apl.str_idx) THEN '패스를 추가해주세요'
                    ELSE CONCAT(IFNULL(asd.str_dt_name, ''), ' 외 ',(SELECT COUNT(psl_idx) FROM ad_pass_list WHERE str_idx > 0 AND ps_idx = aps.ps_idx AND pass_list_use = 'Y'), '곳')
                    END AS pass_sub
            , MAX(apl.day_number) AS max_day
        FROM ad_pass_set aps
                 LEFT JOIN ad_pass_list apl on apl.ps_idx = aps.ps_idx
                 LEFT JOIN ad_store_detail asd on asd.str_idx = apl.str_idx
        WHERE aps.mb_idx = #{mb_idx}
          AND aps.ps_use = 'Y'
          AND apl.pass_list_use = 'Y'
          AND (asd.str_dt_type = #{lang} OR asd.str_dt_type IS NULL)
        GROUP BY aps.ps_idx
        <if test='type.equals("A")'>
            ORDER BY RAND() LIMIT 4
        </if>
    </select>

    <select id="passImages" parameterType="map" resultType="string">
        SELECT
            IFNULL(CONCAT(st.str_image ) ,'')   AS str_image
        FROM ad_pass_list apl
                 LEFT JOIN ad_pass_set aps on apl.ps_idx = aps.ps_idx
                 LEFT JOIN ad_store st on st.str_idx = apl.str_idx
                 LEFT JOIN ad_store_detail asd on asd.str_idx = apl.str_idx
        WHERE asd.str_dt_type = 'ko'
          AND apl.str_idx > 0
          AND aps.ps_idx = #{ps_idx} AND (asd.str_dt_type = 'ko' OR asd.str_dt_type = #{lang} OR asd.str_dt_type IS NULL) AND apl.pass_list_use = 'Y'
        GROUP BY apl.psl_idx , asd.str_dt_type
        ORDER BY  apl.day_number ,apl.store_turn
    </select>

    <select id="passDayList" parameterType="map" resultType="map">
        SELECT
            CASE
                WHEN (ac.ct_parent = 11 or st.str_category = 11) THEN 'food'
                WHEN (ac.ct_parent = 10 or st.str_category = 10) THEN 'tour'
                WHEN (ac.ct_parent = 7 or st.str_category = 7) THEN 'exp'
                WHEN ac.ct_parent = 3 or st.str_category = 3 THEN 'fest'
                WHEN ac.ct_parent = 5 or st.str_category = 5 THEN 'hotel'
                ELSE 'etc'
            END AS store_type
             , psl.day_number
             , psl.psl_idx
             , asd.str_dt_name
             , IFNULL(REGEXP_REPLACE(asd.str_dt_desc, '&lt;[^>]+>', '')  , '') AS str_dt_desc
             , st.str_idx
             , st.str_lat
             , st.str_lng
             , IFNULL(CONCAT(st.str_image ) ,'')   AS str_image
             , TRUNCATE(IFNULL((SELECT AVG(review_avg) FROM ad_review WHERE str_idx = st.str_idx), 0.0), 1)AS review_ave
        FROM  ad_pass_list psl
                 LEFT JOIN ad_pass_set ps ON psl.ps_idx = ps.ps_idx
                 LEFT JOIN ad_store st ON psl.str_idx = st.str_idx
                 LEFT JOIN ad_store_detail asd ON psl.str_idx = asd.str_idx
                 LEFT JOIN ad_category ac ON st.str_category = ac.ct_idx
        WHERE (asd.str_dt_type = #{lang})
          AND psl.pass_list_use = 'Y'
          AND ps.ps_idx = #{ps_idx}
          AND psl.str_idx > 0
          AND psl.day_number = #{day}
        GROUP BY psl.psl_idx
        ORDER BY psl.store_turn
    </select>

    <select id="bestPassList" parameterType="map" resultType="map">
        SELECT
            st.str_idx
             , ass.ps_idx
             , MAX(psl.day_number) AS day_count
             , st.str_image AS str_image
             , ass.ps_title
             , ass.ps_content
        FROM ad_pass_set ass
                 LEFT JOIN ad_pass_list psl ON ass.ps_idx = psl.ps_idx
                 LEFT JOIN ad_store st ON psl.str_idx = st.str_idx
                 LEFT JOIN ad_store_detail asd ON st.str_idx = asd.str_idx
        WHERE ass.mb_idx = 0 AND asd.str_dt_type = #{lang}
        GROUP BY ass.ps_idx
        ORDER BY RAND()
        LIMIT 4
    </select>

    <select id="inquiryCategory" resultType="map" parameterType="map">
        SELECT
               inq_category_idx
             , inq_category
             , inq_type
        FROM ad_inquiry_category
        WHERE inq_type = #{type}
    </select>

    <select id="inquiryList" resultType="map" parameterType="map">
        SELECT
            iq.iq_idx
             , iq.mb_idx
             , iq.iq_title
             , DATE_FORMAT(iq.iq_regdate, '%Y-%m-%d') AS iq_regdate
             , iq.iq_status
             , IF(iq.iq_status != 'E' , '답변완료', '답변대기') AS status_text
        FROM ad_inquiry iq
        WHERE mb_idx = #{mb_idx}
        AND iq.inquiry_use = 'Y'
    </select>

    <select id="inquiryOne" resultType="map" parameterType="map">
        SELECT
            iq.iq_idx
             , iq.mb_idx
             , iq.iq_category
             , aic.inq_category
             , iq.iq_title
             , iq.iq_content
             , DATE_FORMAT(iq.iq_regdate, '%Y-%m-%d') AS iq_regdate
             , iq.iq_status
             , IF(iq.iq_status != 'E' , '답변완료', '답변대기') AS status_text
             , iq.answer_content
        FROM ad_inquiry iq
                 LEFT JOIN ad_inquiry_category aic ON iq.iq_category = aic.inq_category_idx
        WHERE iq.iq_idx = #{iq_idx}
          AND iq.inquiry_use = 'Y'
    </select>

    <select id="myBookMark" resultType="map" parameterType="map">
        SELECT
              ab.mark_use AS mark_now
             , ab.post_idx
             , pt.post_title
             , pt.post_content
             , IFNULL(CONCAT(#{url},mp.my_image_file), '') AS first_post_image
             , IF( NULL , '' ,GROUP_CONCAT(CONCAT(#{url}, mp.my_image_file))) AS images
             , IF(pt.mb_idx != #{mb_idx}, 'N', 'Y') AS my_post
             , (SELECT COUNT(like_idx) FROM ad_like WHERE post_idx = pt.post_idx AND like_type = 'P') AS post_like_cnt
             , IFNULL((SELECT like_status FROM ad_like WHERE post_idx = pt.post_idx AND like_type = 'P' AND mb_idx = #{mb_idx}), 'N') AS like_status
        FROM ad_bookmark ab
                 LEFT JOIN ad_posting pt ON pt.post_idx = ab.post_idx
                 LEFT JOIN ad_mypage mp ON pt.post_idx = mp.post_idx
        WHERE ab.mb_idx = #{mb_idx} AND pt.post_status = 'Y' AND ab.mark_use = 'Y'
        GROUP BY pt.post_idx
    </select>

    <select id="userFaqList" parameterType="map" resultType="map">
        SELECT
            af.faq_idx
             , af.faq_title
             , af.faq_contents
             , aic.inq_category
             , aic.inq_category_idx
        FROM ad_faq af
                 LEFT JOIN ad_inquiry_category aic ON aic.inq_category_idx = af.faq_category
        WHERE aic.inq_type = 'F' AND af.faq_use = 'Y'
        <if test="!faq_category.equals('')">
            AND af.faq_category = #{faq_category}
        </if>
    </select>

    <select id="userFaqCategoryList" parameterType="map" resultType="map">
        SELECT
            aic.inq_category_idx
             , aic.inq_category
        FROM  ad_inquiry_category aic
        WHERE aic.inq_type = 'F'
    </select>

</mapper>