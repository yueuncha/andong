<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tour.user.repository.read.UserMemberReadRepository">
    <select id="agreementOne" resultType="map" parameterType="map">
        SELECT
            fq.faq_idx
             , fq.faq_title
             <choose>
                 <when test="idx != null">
                     , fq.faq_contents
                 </when>
                <otherwise>
                    , CONCAT(#{ip}, '/view?idx=',fq.faq_idx) AS url
                </otherwise>
             </choose>
        FROM ad_faq fq
        WHERE faq_use = 'Y'
          AND faq_type = 'T'
          <if test="idx != null" >
              AND faq_idx = #{idx}
              LIMIT 1
          </if>
    </select>

    <select id="selectUserList" resultType="map">
        SELECT
            am.mb_idx
             , IFNULL(am.mb_id, '') AS mb_id
             , IFNULL(am.mb_pw, '') AS mb_pw
             , IFNULL(am.mb_email, '') AS mb_email
             , IFNULL(am.mb_ci, '') AS mb_ci
             , IFNULL(am.mb_gender, '') AS mb_gender
             , IFNULL(am.mb_birth, '') AS mb_birth
             , DATE_FORMAT(am.mb_regdate, '%Y/%m/%d %H:%i:%s') AS mb_regdate
             , CAST(am.mb_level AS SIGNED) AS mb_level
             , CAST(am.mb_status AS SIGNED) AS mb_status
             , am.mb_nickname
             , (SELECT ls.set_1_name FROM local_set_1 ls
                WHERE ls.set_1_code = am.mb_local ) AS mb_local
             , (SELECT lss.set_2_name FROM local_set_2  lss
                WHERE lss.set_2_code = am.mb_local2 ) AS mb_local2
             , am.mb_foreigner
             , IFNULL(fi.app_type , '') AS app_type
             , IFNULL(fi.app_ver , '') AS app_ver
             , IFNULL(am.mb_sns, 'E') AS mb_sns
        FROM ad_member am
                 LEFT JOIN fcm_info fi ON am.mb_idx = fi.mb_idx
        WHERE mb_status = 1
    </select>

    <select id="selectUserOne" parameterType="map" resultType="map">
        SELECT
            am.mb_idx
             , IFNULL(am.mb_id, '') AS mb_id
             , IFNULL(am.mb_pw, '') AS mb_pw
             , IFNULL(am.mb_email, '') AS mb_email
             , IFNULL(am.mb_ci, '') AS mb_ci
             , IFNULL(am.mb_gender, '') AS mb_gender
             , IFNULL(am.mb_birth, '') AS mb_birth
             , DATE_FORMAT(am.mb_regdate, '%Y/%m/%d %H:%i:%s') AS mb_regdate
             , CAST(am.mb_level AS SIGNED) AS mb_level
             , CAST(am.mb_status AS SIGNED) AS mb_status
             , am.mb_nickname
             , CASE
                   WHEN mb_birth IS NULL THEN NULL
                   ELSE FLOOR(DATEDIFF(NOW(), mb_birth) / 3650)*10
                END AS member_age_group
             , CASE
                   WHEN am.mb_birth IS NULL THEN 0
                   ELSE FLOOR(DATEDIFF(NOW(), am.mb_birth) / 365)
                END AS member_age
             , (SELECT ls.set_1_name FROM local_set_1 ls
                WHERE ls.set_1_code = am.mb_local ) AS mb_local
             , IFNULL((SELECT lss.set_2_name FROM local_set_2  lss
                       WHERE lss.set_2_code = am.mb_local2 ), '') AS mb_local2
             , am.mb_foreigner
             , IFNULL(fi.app_type , '') AS app_type
             , IFNULL(fi.app_ver , '') AS app_ver
             , IFNULL(am.mb_sns, 'E') AS mb_sns
        FROM ad_member am
                 LEFT JOIN fcm_info fi ON am.mb_idx = fi.mb_idx
        WHERE mb_status = 1
          AND  am.mb_idx = #{mb_idx}
    </select>

    <select id="userDupChk" parameterType="Object" resultType="Integer">
        SELECT
            COUNT(${mb_param} = ${mb_param})
        FROM ad_member
        WHERE mb_status = 1
          AND ${mb_param} = #{mb_value}
    </select>

    <select id="userDataOne" parameterType="Object" resultType="java.util.Map">
        SELECT
            ${mb_param}
        FROM ad_member
        WHERE mb_status = 1
          AND mb_idx = #{mb_idx}
    </select>

    <select id="userLogin" parameterType="String" resultType="map">
        SELECT
            am.mb_idx
             , IFNULL(am.mb_id, '') AS mb_id
             , IFNULL(am.mb_pw, '') AS mb_pw
             , IFNULL(am.mb_email, '') AS mb_email
             , IFNULL(am.mb_ci, '') AS mb_ci
             , IFNULL(am.mb_gender, '') AS mb_gender
             , IFNULL(am.mb_birth, '') AS mb_birth
             , DATE_FORMAT(am.mb_regdate, '%Y/%m/%d %H:%i:%s') AS mb_regdate
             , CAST(am.mb_level AS SIGNED) AS mb_level
             , CAST(am.mb_status AS SIGNED) AS mb_status
             , CASE
                   WHEN am.mb_birth IS NULL THEN 0
                   ELSE FLOOR(DATEDIFF(NOW(), am.mb_birth) / 365)
                END AS member_age
             , CASE
                     WHEN mb_birth IS NULL THEN NULL
                     ELSE FLOOR(DATEDIFF(NOW(), mb_birth) / 3650)*10
                END AS member_age_group
             , am.mb_nickname
             , (SELECT ls.set_1_name FROM local_set_1 ls
                WHERE ls.set_1_code = am.mb_local ) AS mb_local
             , IFNULL((SELECT lss.set_2_name FROM local_set_2  lss
                       WHERE lss.set_2_code = am.mb_local2 ), '') AS mb_local2
             , am.mb_foreigner
             , IFNULL(fi.app_type , '') AS app_type
             , IFNULL(fi.app_ver , '') AS app_ver
             , fi.fcm_idx
             , fi.push_use
             , fi.marketing_use
             , IFNULL(am.mb_sns, 'E') AS mb_sns
        FROM ad_member am
                 LEFT JOIN fcm_info fi ON am.mb_idx = fi.mb_idx
        WHERE mb_status = 1
          AND mb_email = #{mb_email}
          ORDER BY fi.fcm_date DESC
          LIMIT 1
    </select>

    <select id="localCategory" parameterType="String" resultType="map">
        SELECT
            ls.set_1_idx
            , ls.set_1_code
            , ls.set_1_name
            , ls.set_1_type
        FROM local_set_1 ls
        WHERE ls.set_1_type = #{mb_foreign}
    </select>

    <select id="localChoice" parameterType="String" resultType="map">
        SELECT
            lss.set_2_idx
            , lss.set_1_code
            , lss.set_2_code
            , lss.set_2_name
        FROM local_set_2 lss
        WHERE lss.set_1_code = #{mb_set_1_code}
    </select>

    <select id="sessionData" resultType="map" parameterType="map">
        SELECT
            fcm_idx
            , IFNULL(mb_idx, '') AS mb_idx
            , fcm_token
            , app_ver
            , app_type
            , device_name
            , device_os_ver
            , IFNULL(email_check, '') AS email_check
            , IFNULL(push_use, '') AS push_use
            , IFNULL(marketing_use, '') AS marketing_use
            , IFNULL(user_lat, 0) AS user_lat
            , IFNULL(user_lng, 0 ) AS user_lng
        FROM fcm_info
        WHERE
            <choose>
                <when test="mb_idx != 0">
                    mb_idx = #{mb_idx}
                </when>
                 <otherwise>
                     fcm_idx = #{fcm_idx}
                 </otherwise>
            </choose>
    </select>

    <select id="snsUserLogin" resultType="map" parameterType="map">
        SELECT * FROM
        (
            SELECT
                am.mb_idx
                 , IFNULL(am.mb_id, '') AS mb_id
                 , IFNULL(am.mb_pw, '') AS mb_pw
                 , IFNULL(am.mb_email, '') AS mb_email
                 , IFNULL(am.mb_ci, '') AS mb_ci
                 , IFNULL(am.mb_gender, '') AS mb_gender
                 , IFNULL(am.mb_birth, '') AS mb_birth
                 , DATE_FORMAT(am.mb_regdate, '%Y/%m/%d %H:%i:%s') AS mb_regdate
                 , CAST(am.mb_level AS SIGNED) AS mb_level
                 , CAST(am.mb_status AS SIGNED) AS mb_status
                 , CASE
                       WHEN am.mb_birth IS NULL THEN 0
                       ELSE FLOOR(DATEDIFF(NOW(), am.mb_birth) / 365)
                END AS member_age
                 , CASE
                       WHEN mb_birth IS NULL THEN NULL
                       ELSE FLOOR(DATEDIFF(NOW(), mb_birth) / 3650)*10
                END AS member_age_group
                 , am.mb_nickname
                 , (SELECT ls.set_1_name FROM local_set_1 ls
                    WHERE ls.set_1_code = am.mb_local ) AS mb_local
                 , IFNULL((SELECT lss.set_2_name FROM local_set_2  lss
                           WHERE lss.set_2_code = am.mb_local2 ), '') AS mb_local2
                 , am.mb_foreigner
                 , IFNULL(fi.app_type , '') AS app_type
                 , IFNULL(fi.app_ver , '') AS app_ver
                 , fi.fcm_idx
                 , fi.push_use
                 , fi.marketing_use
                 , fi.fcm_date
                 , IFNULL(am.mb_sns, 'E') AS mb_sns
                 , true AS login_result
            FROM ad_member am
                     LEFT JOIN fcm_info fi ON am.mb_idx = fi.mb_idx
            WHERE mb_status = 1
              AND am.mb_ci = #{mb_ci}
              AND am.mb_sns = #{mb_sns}
            UNION
            SELECT
                '' AS mb_idx
                 , '' AS mb_id
                 , '' AS mb_pw
                 , '' AS mb_email
                 , '' AS mb_ci
                 , '' AS mb_gender
                 , '' AS mb_birth
                 , '' AS mb_regdate
                 , 0 AS mb_level
                 , 0 AS mb_status
                 , 0 AS member_age
                 , 0 AS member_age_group
                 , '' AS mb_nickname
                 , '' AS mb_local
                 , '' AS mb_local2
                 , '' AS mb_foreigner
                 , '' AS app_type
                 , '' AS app_ver
                 , 0 AS fcm_idx
                 , '' AS push_use
                 , '' AS marketing_use
                 , 'E' AS mb_sns
                 , '' AS fcm_date
                 , false AS login_result
            ) AS sns
            ORDER BY sns.fcm_date
            LIMIT 1
    </select>

    <select id="userPushList" parameterType="map" resultType="map">
        SELECT
            fcm_type
             , fcm_idx
             , push_title
             , push_content
             , DATE_FORMAT(push_log_time, '%Y-%m-%d %H:%i:%s') AS push_log_time
             , CASE
                   WHEN  DATE_FORMAT(push_log_time, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') THEN
                       CASE
                           WHEN TIMESTAMPDIFF(MINUTE, push_log_time, NOW()) >= 60 THEN
                               CONCAT(
                                       FLOOR(TIMESTAMPDIFF(MINUTE,push_log_time, NOW()) / 60),
                                       '시간 전'
                                   )
                           ELSE
                               CONCAT(
                                       TIMESTAMPDIFF(MINUTE, CONCAT(push_log_time, ' '), NOW()),
                                       '분 전'
                                   )
                           END
                   ELSE
                       CASE
                           WHEN DATEDIFF(CURDATE(), push_log_time) = 1 THEN '어제'
                           ELSE
                               CONCAT(DATEDIFF(CURDATE(), push_log_time), '일 전')
                           END
                       END AS push_time
        FROM ad_fcm_logs
        WHERE fcm_idx = #{fcm_idx}
        ORDER BY push_log_time
    </select>


</mapper>
