<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tour.admin.repository.read.MemberReadRepository">
    <select id="managerList" resultType="java.util.Map" >
        SELECT
            mb_idx
            , mb_id
            , mb_nickname
            , CAST(mb_level AS SIGNED) as mb_level
            , mb_regdate
            , CAST(mb_status AS SIGNED) as mb_status
        FROM ad_member
    </select>

    <select id="managerOne" resultType="java.util.Map" parameterType="Integer">
        SELECT
            mb_idx
            , mb_id
            , mb_nickname
            , CAST(mb_level AS SIGNED) as mb_level
            , CAST(mb_status AS SIGNED) as mb_status
        FROM ad_member
        WHERE mb_idx = #{mb_idx}
    </select>

    <select id="storeList" resultType="map" parameterType="map">
        SELECT DISTINCT
            st.str_idx
                      , IFNULL(st.str_like_cnt, 0) AS str_like_cnt
                      , st.str_lat
                      , IFNULL(st.str_view_cnt, 0) AS str_view_cnt
                      , st.str_lng
                      , ac.ct_ko_nm
                      , st.str_phone
                      , st.str_category
                      , asd.str_dt_name
                      , asd.str_dt_type
                      , IFNULL(asd.str_dt_address , '') AS str_dt_address
                      , IFNULL(CONCAT(substring(asd.str_dt_desc, 1, 30), '....') , '') AS str_dt_desc
                      , TRUNCATE(IFNULL((SELECT AVG(review_avg) FROM ad_review WHERE str_idx = st.str_idx), 0.0), 1)AS review_ave
                      , IFNULL(
                (SELECT like_status
                 FROM ad_like
                 WHERE mb_idx = IFNULL(#{mb_idx}, '') and str_idx = st.str_idx GROUP BY mb_idx), 'N') AS like_status
        FROM ad_store st
                 LEFT JOIN ad_store_detail asd ON st.str_idx = asd.str_idx
                 LEFT JOIN ad_category ac ON st.str_category = ac.ct_idx
          WHERE asd.str_dt_type = 'ko'
        GROUP BY st.str_idx, asd.str_dt_type
        ORDER BY IFNULL(#{sorting},'')
    </select>

    <select id="storeOne" resultType="map" parameterType="map">
        SELECT DISTINCT
            st.str_idx
                      , IFNULL(st.str_like_cnt, 0) AS str_like_cnt
                      , st.str_lat
                      , st.str_lng
                      , ac.ct_ko_nm
                      , ac.ct_ja_nm
                      , ac.ct_zh_nm
                      , ac.ct_es_nm
                      , ac.ct_eu_nm
                      , IFNULL(CONCAT(#{url},st.str_image), st.str_image)  AS str_image
                      , st.str_week_s_time
                      , st.str_week_e_time
                      , st.str_phone
                      , st.str_category
                      , IFNULL(st.str_website, '') AS str_website
                      , asd.str_dt_name
                      , asd.str_dt_type
                      , IFNULL(asd.str_dt_address , '') AS str_dt_address
                      , IFNULL(asd.str_dt_address_dt , '') AS str_dt_address_dt
                      , IFNULL(asd.str_dt_desc , '') AS str_dt_desc
                      , 0.0 AS str_km
                      , (SELECT COUNT(*)
                         FROM ad_review
                         WHERE str_idx = st.str_idx ) AS str_review_cnt
                      , TRUNCATE(IFNULL((SELECT AVG(review_avg) FROM ad_review WHERE str_idx = st.str_idx), 0.0), 1)AS review_ave
                      , IFNULL(
                (SELECT like_status
                 FROM ad_like
                 WHERE mb_idx = IFNULL(#{mb_idx}, '') and str_idx = st.str_idx GROUP BY mb_idx), 'N') AS like_status
        FROM ad_store st
                 LEFT JOIN ad_store_detail asd ON st.str_idx = asd.str_idx
                 LEFT JOIN ad_category ac ON st.str_category = ac.ct_idx
        WHERE st.str_idx = #{str_idx}
          AND asd.str_dt_type = 'ko'
        GROUP BY st.str_idx, asd.str_dt_type
        ORDER BY IFNULL(#{sorting},'')
    </select>

    <!--<select id="dbCodeList" resultType="String">
        SELECT bd_code from ad_payment
        SELECT str_idx from ad_store where str_idx > 3000
    </select>-->


    <select id="dbCodeList" resultType="String">
        SELECT str_idx from ad_store where str_idx > 3000
    </select>

</mapper>